/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.Cashier.StudentInfo;


import Models.Student;
import Section.StationSection;
import Views.Cashier.Transaction.ORHistory;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Point;


/**
 *
 * @author Eunar B. Dayangco
 */
public class CashierStudentInfoMain extends javax.swing.JFrame {

    /**
     * Creates new form CashierStudentInfoMain
     */
   
    private Container viewStudentInfo;
    private ORHistory studentPaymentInfo;
    private static Student displayedStudent;    
     
    public CashierStudentInfoMain() {
        initComponents();
        this.setBackground(new Color(0,0,0,0));
        initContainer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        studentInfobodyPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        showStudentInfobtn = new javax.swing.JButton();
        showPaymentInfobtn = new javax.swing.JButton();
        studentInfoPlotterPanel = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        studentInfobodyPanel.setBackground(new java.awt.Color(255, 255, 51));
        studentInfobodyPanel.setOpaque(false);

        jPanel2.setBackground(new java.awt.Color(255, 153, 0));
        jPanel2.setOpaque(false);

        showStudentInfobtn.setBackground(new java.awt.Color(255, 255, 51));
        showStudentInfobtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        showStudentInfobtn.setText("< STUDENT INFO");
        showStudentInfobtn.setBorder(null);
        showStudentInfobtn.setFocusPainted(false);
        showStudentInfobtn.setOpaque(false);
        showStudentInfobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showStudentInfobtnActionPerformed(evt);
            }
        });

        showPaymentInfobtn.setBackground(new java.awt.Color(255, 255, 51));
        showPaymentInfobtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        showPaymentInfobtn.setText("OR HISTORY >");
        showPaymentInfobtn.setBorder(null);
        showPaymentInfobtn.setFocusPainted(false);
        showPaymentInfobtn.setOpaque(false);
        showPaymentInfobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPaymentInfobtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showStudentInfobtn, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 547, Short.MAX_VALUE)
                .addComponent(showPaymentInfobtn, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(showStudentInfobtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(showPaymentInfobtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        studentInfoPlotterPanel.setBackground(new java.awt.Color(255, 51, 0));
        studentInfoPlotterPanel.setOpaque(false);

        javax.swing.GroupLayout studentInfoPlotterPanelLayout = new javax.swing.GroupLayout(studentInfoPlotterPanel);
        studentInfoPlotterPanel.setLayout(studentInfoPlotterPanelLayout);
        studentInfoPlotterPanelLayout.setHorizontalGroup(
            studentInfoPlotterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        studentInfoPlotterPanelLayout.setVerticalGroup(
            studentInfoPlotterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 563, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout studentInfobodyPanelLayout = new javax.swing.GroupLayout(studentInfobodyPanel);
        studentInfobodyPanel.setLayout(studentInfobodyPanelLayout);
        studentInfobodyPanelLayout.setHorizontalGroup(
            studentInfobodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(studentInfoPlotterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        studentInfobodyPanelLayout.setVerticalGroup(
            studentInfobodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentInfobodyPanelLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(studentInfoPlotterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentInfobodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentInfobodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showPaymentInfobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPaymentInfobtnActionPerformed
       this.studentPaymentInfo.displayOnList();
        Container orHistory = this.studentPaymentInfo.getContentPane();
        
        setCornerLocation(viewStudentInfo,orHistory);
                
       if(orHistory.getLocation().getY() == 0){
               orHistory.setLocation((int) orHistory.getLocation().getX(),
                (int) orHistory.getLocation().getY()-40);
       }
              
               
        movetoLeft(viewStudentInfo,70);
        movetoLeft(orHistory,70);

        showPaymentInfobtn.setEnabled(false);
        showStudentInfobtn.setEnabled(true);
        StationSection.getLabel().setText("STUDENT INFO -- OR HISTORY");
    }//GEN-LAST:event_showPaymentInfobtnActionPerformed

    private void showStudentInfobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showStudentInfobtnActionPerformed
       setCornerLocation(viewStudentInfo,studentPaymentInfo.getContentPane());
        movetoRight(viewStudentInfo,70);
        movetoRight(studentPaymentInfo.getContentPane(),70);
        
        showStudentInfobtn.setEnabled(false);
        showPaymentInfobtn.setEnabled(true);
        StationSection.getLabel().setText("STUDENT INFO");
    }//GEN-LAST:event_showStudentInfobtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CashierStudentInfoMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CashierStudentInfoMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CashierStudentInfoMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CashierStudentInfoMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CashierStudentInfoMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton showPaymentInfobtn;
    private javax.swing.JButton showStudentInfobtn;
    private javax.swing.JPanel studentInfoPlotterPanel;
    private javax.swing.JPanel studentInfobodyPanel;
    // End of variables declaration//GEN-END:variables


    public void initContainer(){
        
        this.viewStudentInfo = new ViewStudentInfoUI().getContentPane();
        this.studentPaymentInfo = new ORHistory(false);
        displayComponents(studentInfoPlotterPanel, viewStudentInfo);
        showStudentInfobtn.setEnabled(false);
    

    }
    public boolean addPage(Container page){
     
        if(!studentInfoPlotterPanel.isAncestorOf(page)){
           //CreateSection.displayInfoMessage("Ancestor?", "No");
           studentInfoPlotterPanel.add(page);
           studentInfoPlotterPanel.revalidate();
           studentInfoPlotterPanel.repaint();

           return false;
        }
        else{
            //CreateSection.displayInfoMessage("Ancestor?", "Yes");
            return true;
        }
    }
    public void setCornerLocation(Container side,Container container){
    
         
           
           if(!addPage(container)){
            int accountPageXLocation = (int) container.getLocation().getX();
            int accountPageYLocation = (int) container.getLocation().getY();
                container.setLocation(accountPageXLocation+side.getWidth()+15,accountPageYLocation);
                
           }
    
    }
    
    public void displayComponents(Container cont,Container con){
        cont.removeAll();
        cont.add(con);
        cont.revalidate();
        cont.repaint();
    }
    
    public void movetoLeft(Component comp,int sleep){
        
     
        int countdistance = studentInfoPlotterPanel.getWidth()/6;
       
         Thread th = new Thread(){
            @Override
            public void run() {
                 try {

                        for(int a = 1; a<6; a++){
                            
                            Thread.sleep(sleep);
                            int x = (int) (comp.getLocation().getX()-(countdistance+30));
                            int y = (int) comp.getLocation().getY();
                            comp.setLocation(new Point(x,y));
                            
                        }
                   } catch (InterruptedException ex) {
                       //Logger.getLogger(SetSection.class.getName()).log(Level.SEVERE, null, ex);
                   }
            }
        };
         
         th.start();
    
    }
    
    public void movetoRight(Component comp,int sleep){
        
        Point point = comp.getLocation();
        int countdistance = studentInfoPlotterPanel.getWidth()/6;
       
         Thread th = new Thread(){
            @Override
            public void run() {
                 try {

                        for(int a = 1; a<6; a++){
                            
                            Thread.sleep(sleep);
                            int x = (int) (comp.getLocation().getX()+(countdistance+30));
                            int y = (int) comp.getLocation().getY();
                            comp.setLocation(new Point(x,y));
                            
                        }
                   } catch (InterruptedException ex) {
                       //Logger.getLogger(SetSection.class.getName()).log(Level.SEVERE, null, ex);
                   }
            }
        };
         
         th.start();
    
    }

    public static Student getDisplayedStudent() {
        return displayedStudent;
    }

    public static void setDisplayedStudent(Student displayedStudent) {
        CashierStudentInfoMain.displayedStudent = displayedStudent;
    }
    
    
    
    
}
