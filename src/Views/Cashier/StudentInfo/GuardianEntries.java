/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.Cashier.StudentInfo;

import Controllers.GuardianController;
import Models.Guardian;
import Section.AnimationSection;
import Section.CreateSection;
import Section.DesignSection;
import Section.StationSection;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Eunar B. Dayangco
 */
public class GuardianEntries extends javax.swing.JFrame {

    /**
     * Creates new form Guardian
     */
    private GuardianController controller;
    private String message;
    private ViewStudentInfoUI studentInfoUI;
    private Guardian selectedGuardian;
    
    
    public GuardianEntries() {
        initComponents();
        init();
        
    }
    
     public GuardianEntries(ViewStudentInfoUI studentInfoUI) {
        initComponents();
       init();
        this.studentInfoUI = studentInfoUI;
    }

    public Guardian getSelectedGuardian() {
        this.selectedGuardian.setFullname(fullname_comp.getText());
        this.selectedGuardian.setRelationship(relationship_comp.getSelectedItem().toString());
        this.selectedGuardian.setContactNumber(contact_comp.getText().isEmpty()?
                "No Contact number":contact_comp.getText());
        
        this.selectedGuardian.setAddress(address_comp.getText().isEmpty()?
                "No Address":address_comp.getText());
        
        return selectedGuardian;
    }

    public void setSelectedGuardian(Guardian editedguardian) {
        this.selectedGuardian = editedguardian;
    }
     
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        closebtn = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        fullname_comp = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        contact_comp = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        address_comp = new javax.swing.JTextArea();
        savebtn = new javax.swing.JButton();
        relationship_comp = new javax.swing.JComboBox<>();
        guardianScrollPane = new javax.swing.JScrollPane();
        guardiansTable = new javax.swing.JTable();
        editbtn = new javax.swing.JButton();
        activeChangebtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(null);

        mainPanel.setBackground(new java.awt.Color(161, 214, 226));
        mainPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mainPanel.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(25, 149, 173));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(null);

        closebtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Galleries/CashierMain/close.png"))); // NOI18N
        closebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closebtnMouseClicked(evt);
            }
        });
        jPanel2.add(closebtn);
        closebtn.setBounds(960, 0, 40, 40);

        mainPanel.add(jPanel2);
        jPanel2.setBounds(0, 0, 1000, 40);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setOpaque(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("CONTACT #:");

        fullname_comp.setBackground(new java.awt.Color(25, 149, 173));
        fullname_comp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fullname_comp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fullname_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("ADDRESS:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("RELATIONSHIP:");

        contact_comp.setBackground(new java.awt.Color(25, 149, 173));
        contact_comp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        contact_comp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        contact_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("FULLNAME:");

        address_comp.setBackground(new java.awt.Color(25, 149, 173));
        address_comp.setColumns(20);
        address_comp.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        address_comp.setLineWrap(true);
        address_comp.setRows(5);
        address_comp.setWrapStyleWord(true);
        address_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        savebtn.setBackground(new java.awt.Color(25, 149, 173));
        savebtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        savebtn.setText("CREATE");
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });

        relationship_comp.setBackground(new java.awt.Color(25, 149, 173));
        relationship_comp.setEditable(true);
        relationship_comp.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        relationship_comp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mother", "Father", "Sister", "Brother", "Uncle", "Auntie", "Neighbor" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(330, 330, 330))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(10, 10, 10)
                                    .addComponent(fullname_comp, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(relationship_comp, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(contact_comp, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(savebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(address_comp, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fullname_comp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(relationship_comp))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contact_comp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(address_comp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(savebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        mainPanel.add(jPanel3);
        jPanel3.setBounds(40, 60, 452, 400);

        guardiansTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "GuardianID", "Fullname", "Relationship", "Active"
            }
        ));
        guardianScrollPane.setViewportView(guardiansTable);

        mainPanel.add(guardianScrollPane);
        guardianScrollPane.setBounds(510, 60, 453, 290);

        editbtn.setBackground(new java.awt.Color(25, 149, 173));
        editbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        editbtn.setText("EDIT");
        editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbtnActionPerformed(evt);
            }
        });
        mainPanel.add(editbtn);
        editbtn.setBounds(510, 370, 120, 36);

        activeChangebtn.setBackground(new java.awt.Color(25, 149, 173));
        activeChangebtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        activeChangebtn.setText("DEACTIVE");
        activeChangebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activeChangebtnActionPerformed(evt);
            }
        });
        mainPanel.add(activeChangebtn);
        activeChangebtn.setBounds(660, 370, 160, 36);

        deletebtn.setBackground(new java.awt.Color(25, 149, 173));
        deletebtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deletebtn.setText("DELETE");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });
        mainPanel.add(deletebtn);
        deletebtn.setBounds(840, 370, 120, 36);

        getContentPane().add(mainPanel);
        mainPanel.setBounds(0, 0, 1000, 480);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebtnMouseClicked
        new AnimationSection().framesMoveBacktoTop(this, 70, 20);
    }//GEN-LAST:event_closebtnMouseClicked

    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
       String label = savebtn.getText();
       
       if(label.equals("CREATE")){
            this.controller.insertProcess(this);
       }else if(label.equals("SAVE")){
           
           
           
            this.controller.editProcess(this);
       }
       
      
    }//GEN-LAST:event_savebtnActionPerformed

    private void editbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbtnActionPerformed
       if(guardiansTable.getSelectionModel().isSelectionEmpty()) {
             CreateSection.displayInfoMessage("Edit Instruction", 
                    "Please select a row first in the table and Click me again!");
       }else{
           int row = guardiansTable.getSelectedRow();
           int id = Integer.parseInt(guardiansTable.getValueAt(row, 0).toString());
           Guardian guardian = new GuardianController().getGuardian(id);
           setSelectedGuardian(guardian);
           
            fullname_comp.setText(guardian.getFullname());
            relationship_comp.setSelectedItem(guardian.getRelationship());
            contact_comp.setText(guardian.getContactNumber());
            address_comp.setText(guardian.getAddress());
            savebtn.setText("SAVE");
       }       
    }//GEN-LAST:event_editbtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        if(guardiansTable.getSelectionModel().isSelectionEmpty()) {
             CreateSection.displayInfoMessage("Edit Instruction", 
                    "Please select a row first in the table and Click me again!");
       }else{
           int row = guardiansTable.getSelectedRow();
           int id = Integer.parseInt(guardiansTable.getValueAt(row, 0).toString());
           Guardian guardian = new GuardianController().getGuardian(id);
           setSelectedGuardian(guardian);
           this.controller.deleteProcess(this);
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void activeChangebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activeChangebtnActionPerformed
        
        if(guardiansTable.getSelectionModel().isSelectionEmpty()){
            CreateSection.displayInfoMessage("Edit Instruction", 
                    "Please select a row first in the table and Click me again!");
            
        }else{
           
           int row = guardiansTable.getSelectedRow(); 
           int id = Integer.parseInt(guardiansTable.getValueAt(row, 0).toString());
           Guardian guardian = new GuardianController().getGuardian(id);
          
           guardian.setActive(!guardian.isActive());
          
           this.controller.changeGuardianActive(this,guardian);
           
           
         }
    }//GEN-LAST:event_activeChangebtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuardianEntries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuardianEntries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuardianEntries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuardianEntries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuardianEntries().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton activeChangebtn;
    private javax.swing.JTextArea address_comp;
    private javax.swing.JLabel closebtn;
    private javax.swing.JTextField contact_comp;
    private javax.swing.JButton deletebtn;
    private javax.swing.JButton editbtn;
    private javax.swing.JTextField fullname_comp;
    private javax.swing.JScrollPane guardianScrollPane;
    private javax.swing.JTable guardiansTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JComboBox<String> relationship_comp;
    private javax.swing.JButton savebtn;
    // End of variables declaration//GEN-END:variables
    public void designComponents(){
        
        new DesignSection().designForm(this, mainPanel, "mini");
        new DesignSection().designTable(guardiansTable, guardianScrollPane);
        
        JTableHeader header = guardiansTable.getTableHeader();
        header.setFont(new Font("Dialog", Font.BOLD, 14));
          
        header.setBackground(new Color(25,149,173));
        header.setForeground(Color.WHITE);
        header.setPreferredSize(new Dimension(0,30));
    }
    
    public void init(){
        
        designComponents();
        this.controller = new GuardianController();
         guardiansTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                
                if(!guardiansTable.getSelectionModel().isSelectionEmpty()){
                    int row = guardiansTable.getSelectedRow();
                    String activeStatus = guardiansTable.getValueAt(row, 3).toString();
                    if(activeStatus.equals("YES")){
                        activeChangebtn.setText("DEACTIVATE");
                    }else{
                        activeChangebtn.setText("ACTIVATE");
                    }
                    
                }
               
            }
        });
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }
    
    
    public Guardian getNewGuardianEntry(){
        
        Guardian guardian = new Guardian();
        guardian.setStudent(studentInfoUI.getDisplayedStudent());
        guardian.setFullname(fullname_comp.getText());
        guardian.setRelationship(relationship_comp.getSelectedItem().toString());
        guardian.setContactNumber(contact_comp.getText().isEmpty()?
                "No Contact number":contact_comp.getText());
        
         guardian.setAddress(address_comp.getText().isEmpty()?
                "No Address":address_comp.getText());
         
         guardian.setUser(StationSection.getLoggedUser());
        return guardian;
    
    }
  
    public boolean validateInput(){
        
        String displayMessage = "";
        
        if(fullname_comp.getText().isEmpty()){
            displayMessage+="Please insert fullname.\n";
        }
       
        
        setMessage(displayMessage);
        
        return fullname_comp.getText().isEmpty();
        
    }
    public void backtoCreateButton(){
        savebtn.setText("CREATE");
    }
    public void displayOnTable(){
        guardiansTable.removeAll();
        DefaultTableModel model = (DefaultTableModel)guardiansTable.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];
        
        int studentID = studentInfoUI.getDisplayedStudent().getStudentID();
        ArrayList<Guardian> guardians = new GuardianController().
                getGuardians(studentID);
        for(Guardian guardian:guardians){
            
            row[0] = guardian.getGuardianID();
            row[1] = guardian.getFullname();
            row[2] = guardian.getRelationship();
            row[3] = guardian.isActive()?"YES":"NO";
            model.addRow(row);
        }
        
        new DesignSection().hideColumn(0, guardiansTable);
        
        studentInfoUI.displayGuardians();
    }
    
    public void clearAll(){
        fullname_comp.setText("");
        relationship_comp.setSelectedIndex(0);
        contact_comp.setText("");
        address_comp.setText("");
    }
    
    
    
            
    
}
