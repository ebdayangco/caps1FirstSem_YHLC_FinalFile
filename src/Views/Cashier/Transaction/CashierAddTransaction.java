/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Views.Cashier.Transaction;

import Controllers.GeneralPaymentController;
import Controllers.GuardianController;
import Controllers.StudentTransactionController;
import Models.GeneralPayment;
import Models.Guardian;
import Models.Student;
import Models.StudentTransaction;
import Section.DesignSection;
import Section.SliderLeft;
import Section.StationSection;
import Views.Cashier.StudentInfo.FindStudent;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Eunar B. Dayangco
 */
public class CashierAddTransaction extends javax.swing.JFrame {


   
    private CashierTransactionMain main;
    private SliderLeft slider;
    private Student currentStudentTransacted;
    private ArrayList<StudentTransaction>transacted;
    private StudentTransactionController controller;
    
    public CashierAddTransaction() {
       initComponents();
       this.setBackground(new Color(0,0,0,0));
       init();
    }
    
    public CashierAddTransaction(CashierTransactionMain main) {
       
       initComponents();
       this.main = main;
       init();

    }

    public SliderLeft getSlider() {
        return slider;
    }

    public Student getCurrentStudentTransacted() {
        return currentStudentTransacted;
    }

    public void setCurrentStudentTransacted(Student currentStudentTransacted) {
        this.currentStudentTransacted = currentStudentTransacted;
    }
    
    
   

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTransactionPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        findbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        schoolID_comp = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        fullname_comp = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        grade_comp = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        activeGuardian_comp = new javax.swing.JTextField();
        lastPayment_comp = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        transEntryScrollPane = new javax.swing.JScrollPane();
        transEntrytable = new javax.swing.JTable();
        transacbtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        totalamount = new javax.swing.JLabel();
        remarks_comp = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        officialReceipt_comp = new javax.swing.JTextField();
        receiptType_comp = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        mainTransactionPanel.setBackground(new java.awt.Color(255, 255, 51));
        mainTransactionPanel.setToolTipText("");
        mainTransactionPanel.setOpaque(false);
        mainTransactionPanel.setPreferredSize(new java.awt.Dimension(930, 620));

        jPanel2.setBackground(new java.awt.Color(247, 220, 111));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(null);

        findbtn.setBackground(new java.awt.Color(102, 0, 0));
        findbtn.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        findbtn.setForeground(new java.awt.Color(255, 255, 255));
        findbtn.setText("...");
        findbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        findbtn.setFocusPainted(false);
        findbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findbtnActionPerformed(evt);
            }
        });
        jPanel2.add(findbtn);
        findbtn.setBounds(10, 10, 60, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("ID#:");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(80, 10, 40, 30);

        schoolID_comp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        schoolID_comp.setForeground(new java.awt.Color(0, 0, 0));
        schoolID_comp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(schoolID_comp);
        schoolID_comp.setBounds(120, 10, 240, 30);

        jPanel4.setBackground(new java.awt.Color(247, 220, 111));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Fullname:");
        jPanel4.add(jLabel3);
        jLabel3.setBounds(30, 20, 90, 17);

        fullname_comp.setBackground(new java.awt.Color(204, 153, 0));
        fullname_comp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        fullname_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        fullname_comp.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        fullname_comp.setEnabled(false);
        fullname_comp.setPreferredSize(new java.awt.Dimension(3, 26));
        jPanel4.add(fullname_comp);
        fullname_comp.setBounds(30, 40, 310, 35);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Grade:");
        jPanel4.add(jLabel4);
        jLabel4.setBounds(30, 100, 80, 17);

        grade_comp.setBackground(new java.awt.Color(204, 153, 0));
        grade_comp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        grade_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        grade_comp.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        grade_comp.setEnabled(false);
        grade_comp.setPreferredSize(new java.awt.Dimension(3, 26));
        jPanel4.add(grade_comp);
        grade_comp.setBounds(30, 120, 310, 35);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Active Guardian:");
        jPanel4.add(jLabel6);
        jLabel6.setBounds(30, 170, 130, 17);

        activeGuardian_comp.setBackground(new java.awt.Color(204, 153, 0));
        activeGuardian_comp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        activeGuardian_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        activeGuardian_comp.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        activeGuardian_comp.setEnabled(false);
        activeGuardian_comp.setPreferredSize(new java.awt.Dimension(3, 26));
        jPanel4.add(activeGuardian_comp);
        activeGuardian_comp.setBounds(30, 190, 310, 35);

        lastPayment_comp.setBackground(new java.awt.Color(204, 153, 0));
        lastPayment_comp.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lastPayment_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        lastPayment_comp.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lastPayment_comp.setEnabled(false);
        lastPayment_comp.setPreferredSize(new java.awt.Dimension(3, 26));
        jPanel4.add(lastPayment_comp);
        lastPayment_comp.setBounds(30, 270, 220, 35);

        jButton2.setBackground(new java.awt.Color(102, 0, 0));
        jButton2.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("SHOW");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setFocusPainted(false);
        jPanel4.add(jButton2);
        jButton2.setBounds(260, 270, 80, 35);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Last Payment:");
        jPanel4.add(jLabel10);
        jLabel10.setBounds(30, 250, 120, 17);

        jPanel3.setBackground(new java.awt.Color(102, 0, 0));
        jPanel3.setOpaque(false);
        jPanel3.setLayout(null);

        transEntrytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PaymentID", "Payment", "Balance", "Amount to Pay"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        transEntrytable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                transEntrytableKeyTyped(evt);
            }
        });
        transEntryScrollPane.setViewportView(transEntrytable);
        if (transEntrytable.getColumnModel().getColumnCount() > 0) {
            transEntrytable.getColumnModel().getColumn(0).setResizable(false);
            transEntrytable.getColumnModel().getColumn(1).setResizable(false);
            transEntrytable.getColumnModel().getColumn(2).setResizable(false);
            transEntrytable.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel3.add(transEntryScrollPane);
        transEntryScrollPane.setBounds(30, 130, 430, 230);

        transacbtn.setBackground(new java.awt.Color(102, 0, 0));
        transacbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        transacbtn.setForeground(new java.awt.Color(255, 255, 255));
        transacbtn.setText("TRANSACT");
        transacbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        transacbtn.setFocusPainted(false);
        transacbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transacbtnActionPerformed(evt);
            }
        });
        jPanel3.add(transacbtn);
        transacbtn.setBounds(310, 510, 151, 41);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("TOTAL:");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(30, 510, 60, 40);

        totalamount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        totalamount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalamount.setText("0.00");
        totalamount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.add(totalamount);
        totalamount.setBounds(100, 510, 190, 40);

        remarks_comp.setBackground(new java.awt.Color(204, 153, 0));
        remarks_comp.setColumns(20);
        remarks_comp.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        remarks_comp.setLineWrap(true);
        remarks_comp.setRows(5);
        remarks_comp.setWrapStyleWord(true);
        remarks_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel3.add(remarks_comp);
        remarks_comp.setBounds(30, 400, 430, 90);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("REMARKS:");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(30, 370, 90, 20);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("SHOW RECEIPT TYPE");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(30, 20, 180, 40);

        officialReceipt_comp.setBackground(new java.awt.Color(204, 153, 0));
        officialReceipt_comp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        officialReceipt_comp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        officialReceipt_comp.setText(" ");
        officialReceipt_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        officialReceipt_comp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                officialReceipt_compActionPerformed(evt);
            }
        });
        jPanel3.add(officialReceipt_comp);
        officialReceipt_comp.setBounds(210, 80, 250, 40);

        receiptType_comp.setBackground(new java.awt.Color(254, 175, 57));
        receiptType_comp.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        receiptType_comp.setForeground(new java.awt.Color(0, 0, 0));
        receiptType_comp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Provisional Receipt", "Official Receipt" }));
        receiptType_comp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                receiptType_compItemStateChanged(evt);
            }
        });
        jPanel3.add(receiptType_comp);
        receiptType_comp.setBounds(210, 20, 250, 40);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("OFFICIAL RECEIPT:");
        jPanel3.add(jLabel12);
        jLabel12.setBounds(60, 80, 150, 40);

        jButton7.setBackground(new java.awt.Color(102, 0, 0));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("SHOW OR HISTORY");
        jButton7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton7.setFocusPainted(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(102, 0, 0));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("QUERY ENTRIES");
        jButton8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton8.setFocusPainted(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(102, 0, 0));
        jButton10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("OTHER ENTRY");
        jButton10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton10.setFocusPainted(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setBackground(new java.awt.Color(102, 0, 0));
        jButton11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("GENERATE EXCEL");
        jButton11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton11.setFocusPainted(false);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainTransactionPanelLayout = new javax.swing.GroupLayout(mainTransactionPanel);
        mainTransactionPanel.setLayout(mainTransactionPanelLayout);
        mainTransactionPanelLayout.setHorizontalGroup(
            mainTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainTransactionPanelLayout.createSequentialGroup()
                .addGroup(mainTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainTransactionPanelLayout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addGroup(mainTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(mainTransactionPanelLayout.createSequentialGroup()
                                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainTransactionPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainTransactionPanelLayout.setVerticalGroup(
            mainTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainTransactionPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(mainTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainTransactionPanelLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addGroup(mainTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(33, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTransactionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 892, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTransactionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void transacbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transacbtnActionPerformed
        setAllEntriesTransactions();
        this.controller.insertTransaction(this);
    }//GEN-LAST:event_transacbtnActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String currentLabel= StationSection.getLabel().getText();
        StationSection.getLabel().setText(currentLabel+" -> OR HISTORY");
        
        main.toPaymentInfo();
        
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String currentLabel= StationSection.getLabel().getText();
        StationSection.getLabel().setText(currentLabel+" -> ALL ENTRIES");
        main.toAllEntries();
     
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
       String currentLabel= StationSection.getLabel().getText();
       
       
        StationSection.getLabel().setText(currentLabel+" -> OTHER ENTRY");
        main.toOtherEntries();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void officialReceipt_compActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_officialReceipt_compActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_officialReceipt_compActionPerformed

    private void findbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findbtnActionPerformed
       
        this.slider =  new SliderLeft(new FindStudent(this).getContentPane());
        this.slider.setVisible(true);
    }//GEN-LAST:event_findbtnActionPerformed

    private void transEntrytableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_transEntrytableKeyTyped
       
    }//GEN-LAST:event_transEntrytableKeyTyped

    private void receiptType_compItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_receiptType_compItemStateChanged
        
        if(currentStudentTransacted !=null){
            displayOnTable();
        }
    }//GEN-LAST:event_receiptType_compItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CashierAddTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CashierAddTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CashierAddTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CashierAddTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CashierAddTransaction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField activeGuardian_comp;
    private javax.swing.JButton findbtn;
    private javax.swing.JTextField fullname_comp;
    private javax.swing.JTextField grade_comp;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField lastPayment_comp;
    private javax.swing.JPanel mainTransactionPanel;
    private javax.swing.JTextField officialReceipt_comp;
    private javax.swing.JComboBox<String> receiptType_comp;
    private javax.swing.JTextArea remarks_comp;
    private javax.swing.JLabel schoolID_comp;
    private javax.swing.JLabel totalamount;
    private javax.swing.JScrollPane transEntryScrollPane;
    private javax.swing.JTable transEntrytable;
    private javax.swing.JButton transacbtn;
    // End of variables declaration//GEN-END:variables
    
    public void init(){
        new DesignSection().designTransactEntryTable(transEntrytable, transEntryScrollPane,this);
        new DesignSection().hideColumn(0, transEntrytable);
        this.setBackground(new Color(0,0,0,0));
        this.controller = new StudentTransactionController();
        
        TableModelListener listener = new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                 totalamount.setText(getTotalAmount()+"");
            }
            
            
        };
        transEntrytable.getModel().addTableModelListener(listener);
        this.transacted = new ArrayList<>();
        
        
        
        
        
    }
    
    public void displayTotalAmount(){
        totalamount.setText(getTotalAmount()+"");
    }
    
    public JLabel getDisplayTotal(){
        return totalamount;
    }
    
    
    
    public void displayStudentInfo(){
        
        Student currentStudent = getCurrentStudentTransacted();
      
        schoolID_comp.setText(currentStudent.getSchoolID());
        fullname_comp.setText(currentStudent.getFullname());
        grade_comp.setText(currentStudent.getLevel());
        
        Guardian guardian = new GuardianController().getActiveGuardian(currentStudent.getStudentID());
        
        if(guardian !=null){
            activeGuardian_comp.setText(guardian.getFullname());
        }
        
        displayOnTable();
        
   
    }
    
    public void setAllLatestTransaction(){
           this.transacted = new ArrayList<>();
           Student currentStudent = getCurrentStudentTransacted();
           int studentID = currentStudent.getStudentID();
           String grade = currentStudent.getLevel();
           String schoolYear= StationSection.getCurrentSchoolYear().getSchoolYearName();
           
           
           ArrayList<GeneralPayment> generalPayments = 
                   new GeneralPaymentController().getPaymentsFromGrade(grade);
           
           ArrayList<StudentTransaction> allTransaction = new ArrayList<>();
       
            
            for(GeneralPayment payment:generalPayments){
                
                 
                 StudentTransaction transaction = this.controller.
                         getLatestTransaction(studentID, payment.getPaymentID(), schoolYear);
                         
                 
                 allTransaction.add(transaction);
                 
            }
            
           this.transacted = allTransaction;
       
    
    }
    
    public void displayOnTable(){
        
        Student currentStudent = getCurrentStudentTransacted();
        int studentID = currentStudent.getStudentID();
        String receiptType = receiptType_comp.getSelectedItem().toString();


         String officialReceipt = new StudentTransactionController().getLatestOfficialReceipt(studentID);
         lastPayment_comp.setText(officialReceipt);
       

        DefaultTableModel model = (DefaultTableModel)transEntrytable.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];
        for(StudentTransaction transaction:this.transacted){
              
              String currentType = transaction.getPaymentFor().getReceiptType();
             
            if(receiptType.equals("All")){
              row[0] = transaction.getPaymentFor().getPaymentID();
              row[1] = transaction.getPaymentFor().getPaymentName();
              row[2] = transaction.getRemainingBalance();
              row[3] = "";
              model.addRow(row);

            }else if(receiptType.equals("Provisional Receipt") && currentType.equals("Provisional Receipt") ){

                  row[0] = transaction.getPaymentFor().getPaymentID();
                  row[1] = transaction.getPaymentFor().getPaymentName();
                  row[2] = transaction.getRemainingBalance();
                  row[3] = "";
                  model.addRow(row);

            }else if(receiptType.equals("Official Receipt") && currentType.equals("Official Receipt")){

                  row[0] = transaction.getPaymentFor().getPaymentID();
                  row[1] = transaction.getPaymentFor().getPaymentName();
                  row[2] = transaction.getRemainingBalance();
                  row[3] = "";
                  model.addRow(row);

            }
        }
  
    }
    
    public double getTotalAmount(){
        double total = 0;
        
        for(int row = 0; row<transEntrytable.getRowCount(); row++){
            
            if(!transEntrytable.getValueAt(row, 3).toString().isEmpty()){
                
                double amount = Double.parseDouble(transEntrytable.getValueAt(row, 3).toString());
                total+=amount;
            }
           
        
            
        }
        
        return total;
        
    }
    
    public void setAllEntriesTransactions(){
        
        this.transacted = new ArrayList<>();
        
       for(int row = 0; row<transEntrytable.getRowCount(); row++){
           
           
           if(!transEntrytable.getValueAt(row, 3).toString().isEmpty()){
               
                double amount = Double.parseDouble(transEntrytable.getValueAt(row, 3).toString());


                double currentBalance = Double.parseDouble(transEntrytable.getValueAt(row, 2).toString());

                StudentTransaction transaction = new StudentTransaction();
                transaction.setOfficialReceipt(officialReceipt_comp.getText());
                transaction.setPaymentFor(new GeneralPaymentController().getGeneralPayment(Integer.parseInt(transEntrytable.getValueAt(row, 0).toString())));
                transaction.setPaymentAmount(amount);
                transaction.setSchoolYear(StationSection.getCurrentSchoolYear().getSchoolYearName());
                transaction.setStudent(getCurrentStudentTransacted());
                transaction.setUser(StationSection.getLoggedUser());
                transaction.setRemarks(remarks_comp.getText());
                transaction.setRemainingBalance(currentBalance-amount);
                transaction.setReported(false);
                this.transacted.add(transaction);
           
           }
        }
    
    }

    public ArrayList<StudentTransaction> getTransacted() {
        return transacted;
    }
    
    public void clearOR_Remarks(){
        officialReceipt_comp.setText("");
        remarks_comp.setText("");
        
    }
    
    public String getSelectedReceiptType(){
        
        return receiptType_comp.getSelectedItem().toString();
        
    }
    
    
     
    
}
