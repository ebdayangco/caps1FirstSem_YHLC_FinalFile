/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.Cashier.StudentInfo;

import Controllers.GuardianController;
import Controllers.StudentController;
import Controllers.StudentTransactionController;
import Helpers.ExcelCommunity;
import Models.Guardian;
import Models.Student;
import Section.AnimationSection;
import Section.CreateSection;
import Section.DesignSection;
import Section.SetSection;
import Section.StationSection;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;

import javax.swing.table.JTableHeader;


/**
 *
 * @author Eunar B. Dayangco
 */
public class AddStudent extends javax.swing.JFrame {

    /**
     * Creates new form NewStudentUI
     */
  
    private StudentController controller;
    private ArrayList<Guardian> guardianEntries;
    private ArrayList<Student> studentEntries;
    private String message;
    
    public AddStudent() {
        initComponents();
        designComponents();
        init();
    }
    
   


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newStudentmainPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        newClosebtn = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        grade_comp = new javax.swing.JComboBox<>();
        imageDisplayer = new javax.swing.JLabel();
        contactNum_comp = new javax.swing.JTextField();
        uploadImage_comp = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        address_comp = new javax.swing.JTextArea();
        shooImage_comp = new javax.swing.JButton();
        fullname_comp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        submitbtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        form138_comp = new javax.swing.JCheckBox();
        nso_comp = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        schoolID_comp = new javax.swing.JTextField();
        studentListPanel = new javax.swing.JPanel();
        studentEntryScrollPane = new javax.swing.JScrollPane();
        studentEntryTable = new javax.swing.JTable();
        deletebtn = new javax.swing.JButton();
        savebtn = new javax.swing.JButton();
        editbtn = new javax.swing.JButton();
        excetTemp_comp = new javax.swing.JButton();
        importExcel_comp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(null);

        newStudentmainPanel.setBackground(new java.awt.Color(161, 214, 226));
        newStudentmainPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        newStudentmainPanel.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(25, 149, 173));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(null);

        newClosebtn.setForeground(new java.awt.Color(255, 255, 255));
        newClosebtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newClosebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Galleries/xbutton.png"))); // NOI18N
        newClosebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newClosebtnMouseClicked(evt);
            }
        });
        jPanel1.add(newClosebtn);
        newClosebtn.setBounds(1180, 0, 40, 30);

        newStudentmainPanel.add(jPanel1);
        jPanel1.setBounds(0, 0, 1220, 30);

        jPanel2.setBackground(new java.awt.Color(102, 0, 0));
        jPanel2.setOpaque(false);
        jPanel2.setLayout(null);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Contact #:");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(220, 180, 90, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Address:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(30, 250, 80, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("  Grade:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(240, 120, 70, 30);

        grade_comp.setBackground(new java.awt.Color(25, 149, 173));
        grade_comp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        grade_comp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nursery", "Kinder 1", "Kinder 2", "Gr. 1", "Gr. 2", "Gr. 3", "Gr. 4", "Gr. 5", "Gr. 6" }));
        jPanel2.add(grade_comp);
        grade_comp.setBounds(310, 120, 310, 30);

        imageDisplayer.setBackground(new java.awt.Color(204, 153, 0));
        imageDisplayer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageDisplayer.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(imageDisplayer);
        imageDisplayer.setBounds(30, 20, 167, 130);

        contactNum_comp.setBackground(new java.awt.Color(25, 149, 173));
        contactNum_comp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        contactNum_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel2.add(contactNum_comp);
        contactNum_comp.setBounds(310, 180, 310, 30);

        uploadImage_comp.setBackground(new java.awt.Color(25, 149, 173));
        uploadImage_comp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        uploadImage_comp.setForeground(new java.awt.Color(255, 255, 255));
        uploadImage_comp.setText("UPLOAD IMAGE");
        uploadImage_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        uploadImage_comp.setFocusPainted(false);
        uploadImage_comp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadImage_compActionPerformed(evt);
            }
        });
        jPanel2.add(uploadImage_comp);
        uploadImage_comp.setBounds(30, 160, 170, 35);

        address_comp.setBackground(new java.awt.Color(25, 149, 173));
        address_comp.setColumns(20);
        address_comp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        address_comp.setRows(5);
        address_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jScrollPane1.setViewportView(address_comp);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(30, 280, 590, 120);

        shooImage_comp.setBackground(new java.awt.Color(25, 149, 173));
        shooImage_comp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        shooImage_comp.setForeground(new java.awt.Color(255, 255, 255));
        shooImage_comp.setText("SHOOT IMAGE");
        shooImage_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        shooImage_comp.setFocusPainted(false);
        jPanel2.add(shooImage_comp);
        shooImage_comp.setBounds(30, 200, 170, 35);

        fullname_comp.setBackground(new java.awt.Color(25, 149, 173));
        fullname_comp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fullname_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel2.add(fullname_comp);
        fullname_comp.setBounds(310, 70, 310, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("  Fullname:");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(220, 70, 90, 30);

        submitbtn.setBackground(new java.awt.Color(25, 149, 173));
        submitbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submitbtn.setText("ADD TO LIST");
        submitbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        submitbtn.setFocusPainted(false);
        submitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitbtnActionPerformed(evt);
            }
        });
        jPanel2.add(submitbtn);
        submitbtn.setBounds(470, 500, 150, 40);

        jPanel4.setBackground(new java.awt.Color(25, 149, 173));
        jPanel4.setOpaque(false);

        form138_comp.setBackground(new java.awt.Color(161, 214, 226));
        form138_comp.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        form138_comp.setText("  FORM 138");
        form138_comp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        form138_comp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                form138_compActionPerformed(evt);
            }
        });

        nso_comp.setBackground(new java.awt.Color(161, 214, 226));
        nso_comp.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        nso_comp.setText("NSO");
        nso_comp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nso_comp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nso_compActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(form138_comp, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(nso_comp, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(form138_comp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nso_comp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel4);
        jPanel4.setBounds(290, 400, 330, 60);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("   School ID:");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(210, 20, 90, 30);

        schoolID_comp.setBackground(new java.awt.Color(25, 149, 173));
        schoolID_comp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        schoolID_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel2.add(schoolID_comp);
        schoolID_comp.setBounds(310, 20, 310, 30);

        newStudentmainPanel.add(jPanel2);
        jPanel2.setBounds(30, 50, 650, 570);

        studentListPanel.setBackground(new java.awt.Color(102, 0, 0));
        studentListPanel.setOpaque(false);
        studentListPanel.setLayout(null);

        studentEntryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "schoolID", "StudentName", "Level"
            }
        ));
        studentEntryScrollPane.setViewportView(studentEntryTable);

        studentListPanel.add(studentEntryScrollPane);
        studentEntryScrollPane.setBounds(30, 20, 460, 340);

        deletebtn.setBackground(new java.awt.Color(25, 149, 173));
        deletebtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deletebtn.setText("DELETE");
        deletebtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deletebtn.setFocusPainted(false);
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });
        studentListPanel.add(deletebtn);
        deletebtn.setBounds(190, 380, 130, 40);

        savebtn.setBackground(new java.awt.Color(25, 149, 173));
        savebtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        savebtn.setText("SAVE");
        savebtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        savebtn.setFocusPainted(false);
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });
        studentListPanel.add(savebtn);
        savebtn.setBounds(360, 380, 130, 40);

        editbtn.setBackground(new java.awt.Color(25, 149, 173));
        editbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        editbtn.setText("EDIT");
        editbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        editbtn.setFocusPainted(false);
        editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbtnActionPerformed(evt);
            }
        });
        studentListPanel.add(editbtn);
        editbtn.setBounds(30, 380, 130, 40);

        excetTemp_comp.setBackground(new java.awt.Color(25, 149, 173));
        excetTemp_comp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        excetTemp_comp.setText("EXCEL Template");
        excetTemp_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        excetTemp_comp.setFocusPainted(false);
        excetTemp_comp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excetTemp_compActionPerformed(evt);
            }
        });
        studentListPanel.add(excetTemp_comp);
        excetTemp_comp.setBounds(240, 510, 250, 40);

        importExcel_comp.setBackground(new java.awt.Color(25, 149, 173));
        importExcel_comp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        importExcel_comp.setText("IMPORT EXCEL DATA");
        importExcel_comp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        importExcel_comp.setFocusPainted(false);
        importExcel_comp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importExcel_compActionPerformed(evt);
            }
        });
        studentListPanel.add(importExcel_comp);
        importExcel_comp.setBounds(240, 460, 250, 40);

        newStudentmainPanel.add(studentListPanel);
        studentListPanel.setBounds(680, 50, 520, 570);

        getContentPane().add(newStudentmainPanel);
        newStudentmainPanel.setBounds(0, 0, 1220, 660);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void form138_compActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_form138_compActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_form138_compActionPerformed

    private void nso_compActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nso_compActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nso_compActionPerformed

    private void importExcel_compActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importExcel_compActionPerformed
        
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(this);
        
        File file = chooser.getSelectedFile();
        
        if(file.getAbsolutePath().endsWith("xlsx")){
            //ImportStudentExcel2007Above excelFile = new ImportStudentExcel2007Above();
            //excelFile.readFiles(file, this);
            CreateSection.displayInfoMessage("Excel Information", "Please upload an "
                    + ".xls file that is Excel 2007 and below.");
        }else{
            
            ExcelCommunity excelFile = new ExcelCommunity(file, this);
            excelFile.readFiles();
            this.controller.multipleInsertStudents(getStudentEntries(),this,"import");
            
            if(StationSection.getCurrentSchoolYear() !=null){
                new StudentTransactionController().startTransaction(StationSection.getCurrentSchoolYear().getSchoolYearName(), 
                        studentEntries);
            }
            
            for(Student student:getStudentEntries()){
                int x = 0;
                for(Guardian guardian:getGuardianEntries()){
                    if(guardian.getStudent().getSchoolID().equals(student.getSchoolID())){
                            getGuardianEntries().get(x).setStudent(student);
                    }
                    
                    x++;
                }
            }
            
            new GuardianController().multipleInsertGuardian(getGuardianEntries());
           
        }
        
        
       
    }//GEN-LAST:event_importExcel_compActionPerformed

    private void newClosebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newClosebtnMouseClicked
        new AnimationSection().framesMoveBacktoTop(this, 70, 20);
    }//GEN-LAST:event_newClosebtnMouseClicked

    private void uploadImage_compActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadImage_compActionPerformed
       this.controller.uploadAnImage(this, imageDisplayer);
    }//GEN-LAST:event_uploadImage_compActionPerformed

    private void submitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitbtnActionPerformed
        String label = submitbtn.getText();
        
        if(label.equals("SAVE")){
            
           editOnTable();
           submitbtn.setText("ADD TO LIST");
           clearAll();
        }
       
        else{
            
            
            if(validateInput()){
                CreateSection.displayInfoMessage("Field Validation", getMessage());
            }else if(isDataOntheList(getStudentEntry())){
               CreateSection.displayInfoMessage("Database Instruction", getMessage());
            }else{
                
                studentEntries.add(getStudentEntry());
                displayOnTable();
                clearAll();
            }
           
          
        }
        

    }//GEN-LAST:event_submitbtnActionPerformed

    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
       
        //this.controller.insertProcess(this);
        this.controller.multipleInsertStudents(getStudentEntries(),this,"entry");
        if(StationSection.getCurrentSchoolYear() !=null){
                new StudentTransactionController().startTransaction(StationSection.getCurrentSchoolYear().getSchoolYearName(), 
                        studentEntries);
        }
    }//GEN-LAST:event_savebtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
       
       if(studentEntryTable.getSelectionModel().isSelectionEmpty()){
            CreateSection.displayInfoMessage("Delete Instruction", 
                    "Please select a row first in the table and Click me again!");
            
        }else{
            deleteOnTable();
        }
       
       
    }//GEN-LAST:event_deletebtnActionPerformed

    private void editbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbtnActionPerformed
        
         if(studentEntryTable.getSelectionModel().isSelectionEmpty()){
            CreateSection.displayInfoMessage("Edit Instruction", 
                    "Please select a row first in the table and Click me again!");
            
        }else{
            
             int row = studentEntryTable.getSelectedRow();
              this.controller.setUploadImage(studentEntries.get(row).getImage());
            displayEditData(studentEntries.get(row));
        }
       
    }//GEN-LAST:event_editbtnActionPerformed

    private void excetTemp_compActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excetTemp_compActionPerformed
        new ExcelCommunity().getStudentExcelTemplate("xls");
    }//GEN-LAST:event_excetTemp_compActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea address_comp;
    private javax.swing.JTextField contactNum_comp;
    private javax.swing.JButton deletebtn;
    private javax.swing.JButton editbtn;
    private javax.swing.JButton excetTemp_comp;
    private javax.swing.JCheckBox form138_comp;
    private javax.swing.JTextField fullname_comp;
    private javax.swing.JComboBox<String> grade_comp;
    private javax.swing.JLabel imageDisplayer;
    private javax.swing.JButton importExcel_comp;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel newClosebtn;
    private javax.swing.JPanel newStudentmainPanel;
    private javax.swing.JCheckBox nso_comp;
    private javax.swing.JButton savebtn;
    private javax.swing.JTextField schoolID_comp;
    private javax.swing.JButton shooImage_comp;
    private javax.swing.JScrollPane studentEntryScrollPane;
    private javax.swing.JTable studentEntryTable;
    private javax.swing.JPanel studentListPanel;
    private javax.swing.JButton submitbtn;
    private javax.swing.JButton uploadImage_comp;
    // End of variables declaration//GEN-END:variables
    
    public void init(){
       
        this.controller = new StudentController();
        this.studentEntries = new ArrayList<>();
        this.guardianEntries = new ArrayList<>();
            
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    public ArrayList<Student> getStudentEntries() {
        return studentEntries;
    }

    public void setStudentEntries(ArrayList<Student> studentEntries) {
        this.studentEntries = studentEntries;
    }

    public ArrayList<Guardian> getGuardianEntries() {
        return guardianEntries;
    }

    public void setGuardianEntries(ArrayList<Guardian> guardianEntries) {
        this.guardianEntries = guardianEntries;
    }
    
    
    
    
    public void designComponents(){
        new DesignSection().designForm(this, newStudentmainPanel, "mini");
        new DesignSection().designTable(studentEntryTable, studentEntryScrollPane);
        SetSection.displayLevelList(grade_comp);
        JTableHeader header = studentEntryTable.getTableHeader();
        header.setFont(new Font("Dialog", Font.BOLD, 14));
          
        header.setBackground(new Color(25,149,173));
        header.setForeground(Color.WHITE);
        header.setPreferredSize(new Dimension(0,30));
        
    }
    
   
    public Student getStudentEntry(){
        
        //get the value of the input data in the components
        Student newStudent = new Student();
       
        //studentID will be generate by Database which is StudentDB - //1
        
         newStudent.setSchoolID(schoolID_comp.getText());//2
         
     
         //addedDate is default as current date and time //3
         newStudent.setFullname(fullname_comp.getText());//4
         newStudent.setAddress(address_comp.getText().isEmpty()?"No Address":address_comp.getText());//5
         newStudent.setContactNumber(contactNum_comp.getText().isEmpty()?"No Contact Number":contactNum_comp.getText());//6
         newStudent.setLevel(grade_comp.getSelectedItem().toString());//7
         newStudent.setUser(StationSection.getLoggedUser());//8
         
        //the controller is the one the find and get the Image
        if(imageDisplayer.getIcon() == null){
            
            newStudent.setImage(new CreateSection().getDefaultImage());
        }else{
            
            newStudent.setImage(this.controller.getUploadImage());//9
        }
         
         
         
         //find if the form138 and birthcertificate is check or not
         newStudent.setForm138(form138_comp.isSelected());//10
         newStudent.setBirthCertificate(nso_comp.isSelected());//11
         
         //active means that student is open
         newStudent.setActive(true);//12
         
         
        return newStudent;
        
    }
    public void clearAll(){
        
        //clearing textfield and textarea
        schoolID_comp.setText("");
        fullname_comp.setText("");
        contactNum_comp.setText("");
        address_comp.setText("");
        
       
        
        
        //uncheck checbox form form138 and nso/birthcertificate
        form138_comp.setSelected(false);
        nso_comp.setSelected(false);
        
        //clear image or icon in JLabel
        imageDisplayer.setIcon(null);
        imageDisplayer.revalidate();
        
    }
    
    public void displayEditData(Student student){
        
       submitbtn.setText("SAVE");
       this.controller.displayUploadImage(imageDisplayer, student.getImage());
       schoolID_comp.setText(student.getSchoolID());
       fullname_comp.setText(student.getFullname());
       grade_comp.setSelectedItem(student.getLevel());
       contactNum_comp.setText(student.getContactNumber());
       address_comp.setText(student.getAddress());
       form138_comp.setSelected(student.isForm138());
       nso_comp.setSelected(student.isBirthCertificate());
    }
    
    
    public void displayOnTable(){
        
        studentEntryTable.removeAll();
        DefaultTableModel model = (DefaultTableModel) studentEntryTable.getModel();

        model.setRowCount(0);
        Object[] row = new Object[3];
        
        for(Student student:this.studentEntries){
            row[0] = student.getSchoolID();
            row[1] = student.getFullname();
            row[2] = student.getLevel();
            model.addRow(row);
        }
        
        
       
       
    }
    
    public boolean validateInput(){
        
        Student student = getStudentEntry();
        
        String displayMessage = "";
        
        if(student.getSchoolID().isEmpty()){
            displayMessage+="Please input the SchoolID.\n";
        }
        if(student.getFullname().isEmpty()){
            displayMessage+="Please input the Fullname.\n";
        }
        
        setMessage(displayMessage);
        return student.getSchoolID().isEmpty() ||
                student.getFullname().isEmpty();
    }
    
    public void deleteOnTable(){
    
        int row = studentEntryTable.getSelectedRow();
        studentEntries.remove(row);
        displayOnTable();
    }
    public void editOnTable(){
        
          int row = studentEntryTable.getSelectedRow();
          this.studentEntries.set(row, getStudentEntry());
          displayOnTable();
    }
    
    public boolean isDataOntheList(Student look){
        
        String displayMessage = "";
        boolean found = false;
        for(Student student:studentEntries){
            
            if(student.getSchoolID().equals(look.getSchoolID())){
                displayMessage+=look.getSchoolID()+" is already on the list.\n";
                found = true;
            }else if(student.getFullname().equals(look.getFullname())){
                 displayMessage+=look.getFullname()+" is already on the list.\n";
                found = true;
            }
            
            if(found){break;}
        }
        setMessage(displayMessage);
        
        return found;
    }
    
    
    
   
 
    
}
